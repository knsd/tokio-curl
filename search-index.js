var searchIndex = {};
searchIndex["tokio_curl"] = {"doc":"A `Future` interface on top of libcurl","items":[[3,"Session","tokio_curl","A shared cache for HTTP requests to pool data such as TCP connections between.",null,null],[3,"Perform","","A future returned from the `Session::perform` method.",null,null],[3,"PerformError","","Error returned by the future returned from `perform`.",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"session"}}],[11,"new","","Creates a new HTTP session object which will be bound to the given event loop.",0,{"i":[{"n":"handle"}],"o":{"n":"session"}}],[11,"with_multi","","Creates a new HTTP session object with the given event loop and [`Multi`] handle. Handlers set on `multi` may be reset depending on the underlying platform.",0,{"i":[{"n":"handle"},{"n":"multi"}],"o":{"n":"session"}}],[11,"perform","","Execute and HTTP request asynchronously, returning a future representing the request's completion.",0,{"i":[{"n":"self"},{"n":"easy"}],"o":{"n":"perform"}}],[11,"poll","","",1,{"i":[{"n":"self"}],"o":{"g":["easy","performerror"],"n":"poll"}}],[11,"take_easy","","Attempts to extract the underlying `Easy` handle, if one is available.",2,{"i":[{"n":"self"}],"o":{"g":["easy"],"n":"option"}}],[11,"into_error","","Returns the underlying I/O error that caused this error.",2,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",2,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}]],"paths":[[3,"Session"],[3,"Perform"],[3,"PerformError"]]};
initSearch(searchIndex);
